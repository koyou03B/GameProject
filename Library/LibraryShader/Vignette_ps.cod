//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer VIGNETTE
// {
//
//   float4 aroundColor;                // Offset:    0 Size:    16
//   float radius;                      // Offset:   16 Size:     4
//   float smoothness;                  // Offset:   20 Size:     4
//   float darkness;                    // Offset:   24 Size:     4
//   float dammy;                       // Offset:   28 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// diffuse_map_sampler_state         sampler      NA          NA             s0      1 
// diffuse_map                       texture  float4          2d             t0      1 
// VIGNETTE                          cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// COLOR                    0   xyzw        2     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[2], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 2
add r0.xy, v1.xyxx, l(-0.500000, -0.500000, 0.000000, 0.000000)
add r0.xy, |r0.xyxx|, |r0.xyxx|
dp2 r0.x, r0.xyxx, r0.xyxx
div r0.x, r0.x, cb0[1].x
min r0.x, r0.x, l(1.000000)
log r0.x, |r0.x|
mul r0.x, r0.x, cb0[1].y
exp r0.x, r0.x
mul_sat r0.x, r0.x, cb0[1].z
sample_indexable(texture2d)(float,float,float,float) r1.xyzw, v1.xyxx, t0.xyzw, s0
add r0.yzw, -r1.xxyz, cb0[0].xxyz
mad o0.xyz, r0.xxxx, r0.yzwy, r1.xyzx
mov o0.w, r1.w
ret 
// Approximately 14 instruction slots used
