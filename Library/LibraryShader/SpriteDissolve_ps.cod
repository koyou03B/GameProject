//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer Dissolve
// {
//
//   float dissolveGlowAmoument;        // Offset:    0 Size:     4
//   float dissolveGlowRange;           // Offset:    4 Size:     4
//   float dissolveGlowFalloff;         // Offset:    8 Size:     4
//   float dissolveDummy;               // Offset:   12 Size:     4 [unused]
//   float4 dissolveGlowColor;          // Offset:   16 Size:    16
//   float4 dissolveEmission;           // Offset:   32 Size:    16
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// diffuse_map_sampler_state         sampler      NA          NA             s0      1 
// diffuse_map                       texture  float4          2d             t0      1 
// noiseTex                          texture  float4          2d             t1      1 
// Dissolve                          cbuffer      NA          NA            cb5      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// COLOR                    0   xyzw        2     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_constantbuffer CB5[3], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_input_ps linear v1.xy
dcl_input_ps linear v2.xyzw
dcl_output o0.xyzw
dcl_temps 3
//
// Initial variable locations:
//   v0.x <- pin.sv_position.x; v0.y <- pin.sv_position.y; v0.z <- pin.sv_position.z; v0.w <- pin.sv_position.w; 
//   v1.x <- pin.texcoord.x; v1.y <- pin.texcoord.y; 
//   v2.x <- pin.color.x; v2.y <- pin.color.y; v2.z <- pin.color.z; v2.w <- pin.color.w; 
//   o0.x <- <main return value>.x; o0.y <- <main return value>.y; o0.z <- <main return value>.z; o0.w <- <main return value>.w
//
#line 9 "D:\Lib関連\GameProject\Library\LibrarySource\SpriteDissolve_ps.hlsl"
sample_indexable(texture2d)(float,float,float,float) r0.x, v1.xyxx, t1.xyzw, s0
mov r0.x, r0.x  // r0.x <- dissolve

#line 10
itof r0.y, l(0)
sample_l_indexable(texture2d)(float,float,float,float) r1.xyzw, v1.xyxx, t0.xyzw, s0, r0.y  // r1.x <- baseColorMap.x; r1.y <- baseColorMap.y; r1.z <- baseColorMap.z; r1.w <- baseColorMap.w

#line 12
nop 
mov r0.x, r0.x
mov r1.xyzw, r1.xyzw
mov r2.xyzw, v2.xyzw

#line 5 "D:\Lib関連\GameProject\Library\LibrarySource\Function.hlsli"
mul r0.x, r0.x, l(0.999000)

#line 7
mov r0.y, -cb5[0].x
add r0.x, r0.y, r0.x  // r0.x <- isVisible

#line 8
lt r0.y, r0.x, l(0.000000)
and r0.y, r0.y, l(-1)
discard_nz r0.y

#line 10
add r0.y, cb5[0].z, cb5[0].y
mov r0.y, -r0.y
add r0.z, r0.y, cb5[0].y
add r0.x, r0.y, r0.x
div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.z
mul r0.x, r0.y, r0.x
max r0.x, r0.x, l(0.000000)
min r0.x, r0.x, l(1.000000)
mul r0.y, r0.x, l(-2.000000)
add r0.y, r0.y, l(3.000000)
mul r0.x, r0.x, r0.x
mul r0.x, r0.x, r0.y  // r0.x <- isGlowing

#line 11
mul r0.xyzw, r0.xxxx, cb5[1].xyzw  // r0.x <- glow.x; r0.y <- glow.y; r0.z <- glow.z; r0.w <- glow.w

#line 13
mul r1.xyzw, r1.xyzw, r2.xyzw
add r0.xyzw, r0.xyzw, cb5[2].xyzw
mul r0.xyzw, r0.xyzw, r1.xyzw  // r0.x <- <Dissolve return value>.x; r0.y <- <Dissolve return value>.y; r0.z <- <Dissolve return value>.z; r0.w <- <Dissolve return value>.w

#line 12 "D:\Lib関連\GameProject\Library\LibrarySource\SpriteDissolve_ps.hlsl"
mov o0.xyzw, r0.xyzw
ret 
// Approximately 32 instruction slots used
