//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer CAMERA_CONSTANTS
// {
//
//   struct CAMERA
//   {
//       
//       float4 position;               // Offset:    0
//       float4 direction;              // Offset:   16
//       row_major float4x4 view;       // Offset:   32
//       row_major float4x4 projection; // Offset:   96
//       row_major float4x4 view_projection;// Offset:  160
//       row_major float4x4 inverse_view;// Offset:  224
//       row_major float4x4 inverse_view_projection;// Offset:  288
//       row_major float4x4 previous_view_projection;// Offset:  352
//
//   } camera;                          // Offset:    0 Size:   416
//
// }
//
// cbuffer SCENE_CONSTANTS
// {
//
//   struct DIRECTIONAL_LIGHT
//   {
//       
//       float4 direction;              // Offset:    0
//       float4 color;                  // Offset:   16
//
//   } directional_light;               // Offset:    0 Size:    32
//   
//   struct POINT_LIGHT
//   {
//       
//       float4 position;               // Offset:   32
//       float4 color;                  // Offset:   48
//
//   } point_light;                     // Offset:   32 Size:    32 [unused]
//   
//   struct SPOT_LIGHT
//   {
//       
//       float4 position;               // Offset:   64
//       float4 color;                  // Offset:   80
//       float4 dir;                    // Offset:   96
//
//   } spot_light;                      // Offset:   64 Size:    48 [unused]
//   float4 ambient_color;              // Offset:  112 Size:    16
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// diffuse_map_sampler_state         sampler      NA          NA             s0      1 
// diffuse_map                       texture  float4          2d             t0      1 
// normal_map                        texture  float4          2d             t3      1 
// CAMERA_CONSTANTS                  cbuffer      NA          NA            cb1      1 
// SCENE_CONSTANTS                   cbuffer      NA          NA            cb2      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// POSITION                 0   xyzw        1     NONE   float       
// NORMAL                   0   xyzw        2     NONE   float   xyz 
// COLOR                    0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 0   xy          4     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_constantbuffer CB1[2], immediateIndexed
dcl_constantbuffer CB2[8], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t3
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xy
dcl_output o0.xyzw
dcl_temps 6
//
// Initial variable locations:
//   v0.x <- pin.sv_position.x; v0.y <- pin.sv_position.y; v0.z <- pin.sv_position.z; v0.w <- pin.sv_position.w; 
//   v1.x <- pin.position.x; v1.y <- pin.position.y; v1.z <- pin.position.z; v1.w <- pin.position.w; 
//   v2.x <- pin.normal.x; v2.y <- pin.normal.y; v2.z <- pin.normal.z; v2.w <- pin.normal.w; 
//   v3.x <- pin.color.x; v3.y <- pin.color.y; v3.z <- pin.color.z; v3.w <- pin.color.w; 
//   v4.x <- pin.texcoord.x; v4.y <- pin.texcoord.y; 
//   o0.x <- <main return value>.x; o0.y <- <main return value>.y; o0.z <- <main return value>.z; o0.w <- <main return value>.w
//
#line 16 "D:\GameProject\Library\LibrarySource\StaticMesh_ps.hlsl"
sample_indexable(texture2d)(float,float,float,float) r0.xyz, v4.xyxx, t0.xyzw, s0
mov r0.xyz, r0.xyzx  // r0.x <- diffuse_map_color.x; r0.y <- diffuse_map_color.y; r0.z <- diffuse_map_color.z

#line 19
sample_indexable(texture2d)(float,float,float,float) r1.xyz, v4.xyxx, t3.xyzw, s0
mov r1.xyz, r1.xyzx  // r1.x <- normal_map_color.x; r1.y <- normal_map_color.y; r1.z <- normal_map_color.z

#line 20
mul r1.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000)
mov r2.xyz, l(-1.000000,-1.000000,-1.000000,-0.000000)
add r1.xyz, r1.xyzx, r2.xyzx

#line 28
dp3 r0.w, v2.xyzx, v2.xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, v2.xyzx  // r2.x <- N.x; r2.y <- N.y; r2.z <- N.z

#line 29
mov r3.xyz, l(0,1.000000,-0.001000,0)  // r3.x <- B.x; r3.y <- B.y; r3.z <- B.z

#line 30
mul r4.xyz, r2.zxyz, r3.yzxy
mul r5.xyz, r2.yzxy, r3.zxyz
mov r5.xyz, -r5.xyzx
add r4.xyz, r4.xyzx, r5.xyzx
dp3 r0.w, r4.xyzx, r4.xyzx
rsq r0.w, r0.w
mul r4.xyz, r0.wwww, r4.xyzx  // r4.x <- T.x; r4.y <- T.y; r4.z <- T.z

#line 32
mul r4.xyz, r1.xxxx, r4.xyzx
mul r1.xyw, r1.yyyy, r3.xyxz
add r1.xyw, r1.xyxw, r4.xyxz
mul r2.xyz, r1.zzzz, r2.xyzx
add r1.xyz, r1.xywx, r2.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx  // r1.x <- N.x; r1.y <- N.y; r1.z <- N.z

#line 34
dp3 r0.w, cb2[0].xyzx, cb2[0].xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, cb2[0].xyzx  // r2.x <- L.x; r2.y <- L.y; r2.z <- L.z

#line 36
mov r3.xyz, cb2[1].xyzx  // r3.x <- C.x; r3.y <- C.y; r3.z <- C.z

#line 37
mov r4.xyz, cb2[7].xyzx  // r4.x <- A.x; r4.y <- A.y; r4.z <- A.z

#line 38
mov r0.xyz, r0.xyzx  // r0.x <- Kd.x; r0.y <- Kd.y; r0.z <- Kd.z

#line 39
nop 
mov r1.xyz, r1.xyzx
mov r2.xyz, r2.xyzx
mov r3.xyz, r3.xyzx
mov r0.xyz, r0.xyzx

#line 25 "D:\GameProject\Library\LibrarySource\Function.hlsli"
mov r2.xyz, -r2.xyzx
dp3 r0.w, r1.xyzx, r2.xyzx
add r0.w, r0.w, l(0.650000)  // r0.w <- D

#line 26
itof r1.w, l(0)
max r0.w, r0.w, r1.w

#line 27
mul r2.xyz, r3.xyzx, r0.xyzx
mul r2.xyz, r0.wwww, r2.xyzx  // r2.x <- <Diffuse return value>.x; r2.y <- <Diffuse return value>.y; r2.z <- <Diffuse return value>.z

#line 39 "D:\GameProject\Library\LibrarySource\StaticMesh_ps.hlsl"
mov r2.xyz, r2.xyzx  // r2.x <- D.x; r2.y <- D.y; r2.z <- D.z

#line 41
nop 

#line 60
dp4 r0.w, cb1[1].xyzw, cb1[1].xyzw
rsq r0.w, r0.w
mul r5.xyz, r0.wwww, cb1[1].xyzx  // r5.x <- E.x; r5.y <- E.y; r5.z <- E.z

#line 61
nop 
mov r5.xyz, r5.xyzx

#line 25 "D:\GameProject\Library\LibrarySource\Function.hlsli"
mov r5.xyz, -r5.xyzx
dp3 r0.w, r1.xyzx, r5.xyzx
add r0.w, r0.w, l(0.650000)  // r0.w <- D

#line 26
itof r1.x, l(0)
max r0.w, r0.w, r1.x

#line 27
mul r0.xyz, r3.xyzx, r0.xyzx
mul r0.xyz, r0.wwww, r0.xyzx  // r0.x <- <Diffuse return value>.x; r0.y <- <Diffuse return value>.y; r0.z <- <Diffuse return value>.z

#line 61 "D:\GameProject\Library\LibrarySource\StaticMesh_ps.hlsl"
mul r0.xyz, r0.xyzx, l(0.600000, 0.600000, 0.600000, 0.000000)
add r0.xyz, r0.xyzx, r2.xyzx  // r0.x <- D.x; r0.y <- D.y; r0.z <- D.z

#line 62
add r0.xyz, r0.xyzx, r4.xyzx
mov r0.w, l(1.000000)
mul o0.xyzw, r0.xyzw, v3.xyzw
ret 
// Approximately 64 instruction slots used
