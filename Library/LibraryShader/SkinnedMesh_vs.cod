//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer CONSTANT_BUFFER
// {
//
//   float4x4 world;                    // Offset:    0 Size:    64
//   float4x4 bone_transforms[128];     // Offset:   64 Size:  8192
//   float4 material_color;             // Offset: 8256 Size:    16
//
// }
//
// cbuffer CAMERA_CONSTANTS
// {
//
//   struct CAMERA
//   {
//       
//       float4 position;               // Offset:    0
//       float4 direction;              // Offset:   16
//       row_major float4x4 view;       // Offset:   32
//       row_major float4x4 projection; // Offset:   96
//       row_major float4x4 view_projection;// Offset:  160
//       row_major float4x4 inverse_view;// Offset:  224
//       row_major float4x4 inverse_view_projection;// Offset:  288
//       row_major float4x4 previous_view_projection;// Offset:  352
//
//   } camera;                          // Offset:    0 Size:   416
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// CONSTANT_BUFFER                   cbuffer      NA          NA            cb0      1 
// CAMERA_CONSTANTS                  cbuffer      NA          NA            cb1      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyzw        1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// WEIGHTS                  0   xyzw        3     NONE   float   xyzw
// BONES                    0   xyzw        4     NONE    uint   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// POSITION                 0   xyzw        1     NONE   float   xyzw
// NORMAL                   0   xyzw        2     NONE   float   xyzw
// COLOR                    0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 0   xy          4     NONE   float   xy  
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[517], dynamicIndexed
dcl_constantbuffer CB1[14], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xyz
dcl_input v2.xy
dcl_input v3.xyzw
dcl_input v4.xyzw
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_output o4.xy
dcl_temps 4
mul r0.xyzw, cb0[1].xyzw, cb1[11].xxxx
mad r0.xyzw, cb0[0].xyzw, cb1[10].xxxx, r0.xyzw
mad r0.xyzw, cb0[2].xyzw, cb1[12].xxxx, r0.xyzw
mad r0.xyzw, cb0[3].xyzw, cb1[13].xxxx, r0.xyzw
ishl r1.xyzw, v4.xyzw, l(2, 2, 2, 2)
dp4 r2.x, v0.xyzw, cb0[r1.y + 4].xyzw
dp4 r2.y, v0.xyzw, cb0[r1.y + 5].xyzw
dp4 r2.z, v0.xyzw, cb0[r1.y + 6].xyzw
mul r2.xyz, r2.xyzx, v3.yyyy
dp4 r3.x, v0.xyzw, cb0[r1.x + 4].xyzw
dp4 r3.y, v0.xyzw, cb0[r1.x + 5].xyzw
dp4 r3.z, v0.xyzw, cb0[r1.x + 6].xyzw
mad r2.xyz, v3.xxxx, r3.xyzx, r2.xyzx
dp4 r3.x, v0.xyzw, cb0[r1.z + 4].xyzw
dp4 r3.y, v0.xyzw, cb0[r1.z + 5].xyzw
dp4 r3.z, v0.xyzw, cb0[r1.z + 6].xyzw
mad r2.xyz, v3.zzzz, r3.xyzx, r2.xyzx
dp4 r3.x, v0.xyzw, cb0[r1.w + 4].xyzw
dp4 r3.y, v0.xyzw, cb0[r1.w + 5].xyzw
dp4 r3.z, v0.xyzw, cb0[r1.w + 6].xyzw
mad r2.xyz, v3.wwww, r3.xyzx, r2.xyzx
mov r2.w, l(1.000000)
dp4 o0.x, r2.xyzw, r0.xyzw
mul r0.xyzw, cb0[1].xyzw, cb1[11].yyyy
mad r0.xyzw, cb0[0].xyzw, cb1[10].yyyy, r0.xyzw
mad r0.xyzw, cb0[2].xyzw, cb1[12].yyyy, r0.xyzw
mad r0.xyzw, cb0[3].xyzw, cb1[13].yyyy, r0.xyzw
dp4 o0.y, r2.xyzw, r0.xyzw
mul r0.xyzw, cb0[1].xyzw, cb1[11].zzzz
mad r0.xyzw, cb0[0].xyzw, cb1[10].zzzz, r0.xyzw
mad r0.xyzw, cb0[2].xyzw, cb1[12].zzzz, r0.xyzw
mad r0.xyzw, cb0[3].xyzw, cb1[13].zzzz, r0.xyzw
dp4 o0.z, r2.xyzw, r0.xyzw
mul r0.xyzw, cb0[1].xyzw, cb1[11].wwww
mad r0.xyzw, cb0[0].xyzw, cb1[10].wwww, r0.xyzw
mad r0.xyzw, cb0[2].xyzw, cb1[12].wwww, r0.xyzw
mad r0.xyzw, cb0[3].xyzw, cb1[13].wwww, r0.xyzw
dp4 o0.w, r2.xyzw, r0.xyzw
dp4 o1.x, r2.xyzw, cb0[0].xyzw
dp4 o1.y, r2.xyzw, cb0[1].xyzw
dp4 o1.z, r2.xyzw, cb0[2].xyzw
dp4 o1.w, r2.xyzw, cb0[3].xyzw
dp3 r0.x, v1.xyzx, cb0[r1.y + 4].xyzx
dp3 r0.y, v1.xyzx, cb0[r1.y + 5].xyzx
dp3 r0.z, v1.xyzx, cb0[r1.y + 6].xyzx
mul r0.xyz, r0.xyzx, v3.yyyy
dp3 r2.x, v1.xyzx, cb0[r1.x + 4].xyzx
dp3 r2.y, v1.xyzx, cb0[r1.x + 5].xyzx
dp3 r2.z, v1.xyzx, cb0[r1.x + 6].xyzx
mad r0.xyz, v3.xxxx, r2.xyzx, r0.xyzx
dp3 r2.x, v1.xyzx, cb0[r1.z + 4].xyzx
dp3 r2.y, v1.xyzx, cb0[r1.z + 5].xyzx
dp3 r2.z, v1.xyzx, cb0[r1.z + 6].xyzx
mad r0.xyz, v3.zzzz, r2.xyzx, r0.xyzx
dp3 r1.x, v1.xyzx, cb0[r1.w + 4].xyzx
dp3 r1.y, v1.xyzx, cb0[r1.w + 5].xyzx
dp3 r1.z, v1.xyzx, cb0[r1.w + 6].xyzx
mad r0.xyz, v3.wwww, r1.xyzx, r0.xyzx
dp3 r1.x, r0.xyzx, cb0[0].xyzx
dp3 r1.y, r0.xyzx, cb0[1].xyzx
dp3 r1.z, r0.xyzx, cb0[2].xyzx
dp3 r1.w, r0.xyzx, cb0[3].xyzx
dp4 r0.x, r1.xyzw, r1.xyzw
rsq r0.x, r0.x
mul o2.xyzw, r0.xxxx, r1.xyzw
mov o3.xyzw, cb0[516].xyzw
mov o4.xy, v2.xyxx
ret 
// Approximately 68 instruction slots used
