//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// NDC_TRANSFORM            0   xyzw        2     NONE   float   xyzw
// NDC_TRANSFORM            1   xyzw        3     NONE   float   xyzw
// NDC_TRANSFORM            2   xyzw        4     NONE   float   xyzw
// NDC_TRANSFORM            3   xyzw        5     NONE   float   xyzw
// TEXCOORD_TRANSFORM       0   xyzw        6     NONE   float   xyzw
// COLOR                    0   xyzw        7     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// COLOR                    0   xyzw        2     NONE   float   xyzw
//
vs_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_input v0.xyzw
dcl_input v1.xy
dcl_input v2.xyzw
dcl_input v3.xyzw
dcl_input v4.xyzw
dcl_input v5.xyzw
dcl_input v6.xyzw
dcl_input v7.xyzw
dcl_output_siv o0.xyzw, position
dcl_output o1.xy
dcl_output o2.xyzw
dcl_temps 3
//
// Initial variable locations:
//   v0.x <- position.x; v0.y <- position.y; v0.z <- position.z; v0.w <- position.w; 
//   v1.x <- texcoord.x; v1.y <- texcoord.y; 
//   v2.x <- ndc_transform._m00; v2.y <- ndc_transform._m10; v2.z <- ndc_transform._m20; v2.w <- ndc_transform._m30; 
//   v3.x <- ndc_transform._m01; v3.y <- ndc_transform._m11; v3.z <- ndc_transform._m21; v3.w <- ndc_transform._m31; 
//   v4.x <- ndc_transform._m02; v4.y <- ndc_transform._m12; v4.z <- ndc_transform._m22; v4.w <- ndc_transform._m32; 
//   v5.x <- ndc_transform._m03; v5.y <- ndc_transform._m13; v5.z <- ndc_transform._m23; v5.w <- ndc_transform._m33; 
//   v6.x <- texcoord_transform.x; v6.y <- texcoord_transform.y; v6.z <- texcoord_transform.z; v6.w <- texcoord_transform.w; 
//   v7.x <- color.x; v7.y <- color.y; v7.z <- color.z; v7.w <- color.w; 
//   o2.x <- <main return value>.color.x; o2.y <- <main return value>.color.y; o2.z <- <main return value>.color.z; o2.w <- <main return value>.color.w; 
//   o1.x <- <main return value>.texcoord.x; o1.y <- <main return value>.texcoord.y; 
//   o0.x <- <main return value>.sv_position.x; o0.y <- <main return value>.sv_position.y; o0.z <- <main return value>.sv_position.z; o0.w <- <main return value>.sv_position.w
//
#line 6 "D:\Lib関連\GameProject\Library\LibrarySource\SpriteBatch_vs.hlsl"
dp4 r0.x, v0.xyzw, v2.xyzw  // r0.x <- vout.sv_position.x
dp4 r0.y, v0.xyzw, v3.xyzw  // r0.y <- vout.sv_position.y
dp4 r0.z, v0.xyzw, v4.xyzw  // r0.z <- vout.sv_position.z
dp4 r0.w, v0.xyzw, v5.xyzw  // r0.w <- vout.sv_position.w

#line 7
mul r1.xy, v1.xyxx, v6.zwzz
add r1.xy, r1.xyxx, v6.xyxx  // r1.x <- vout.texcoord.x; r1.y <- vout.texcoord.y

#line 8
mov r2.xyzw, v7.xyzw  // r2.x <- vout.color.x; r2.y <- vout.color.y; r2.z <- vout.color.z; r2.w <- vout.color.w

#line 9
mov o0.xyzw, r0.xyzw
mov o2.xyzw, r2.xyzw
mov o1.xy, r1.xyxx
ret 
// Approximately 11 instruction slots used
