//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer CAMERA_CONSTANTS
// {
//
//   struct CAMERA
//   {
//       
//       float4 position;               // Offset:    0
//       float4 direction;              // Offset:   16
//       row_major float4x4 view;       // Offset:   32
//       row_major float4x4 projection; // Offset:   96
//       row_major float4x4 view_projection;// Offset:  160
//       row_major float4x4 inverse_view;// Offset:  224
//       row_major float4x4 inverse_view_projection;// Offset:  288
//       row_major float4x4 previous_view_projection;// Offset:  352
//
//   } camera;                          // Offset:    0 Size:   416
//
// }
//
// cbuffer SCENE_CONSTANTS
// {
//
//   struct DIRECTIONAL_LIGHT
//   {
//       
//       float4 direction;              // Offset:    0
//       float4 color;                  // Offset:   16
//
//   } directional_light;               // Offset:    0 Size:    32
//   
//   struct POINT_LIGHT
//   {
//       
//       float4 position;               // Offset:   32
//       float4 color;                  // Offset:   48
//
//   } point_light;                     // Offset:   32 Size:    32 [unused]
//   
//   struct SPOT_LIGHT
//   {
//       
//       float4 position;               // Offset:   64
//       float4 color;                  // Offset:   80
//       float4 dir;                    // Offset:   96
//
//   } spot_light;                      // Offset:   64 Size:    48 [unused]
//   float4 ambient_color;              // Offset:  112 Size:    16
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// diffuse_map_sampler_state         sampler      NA          NA             s0      1 
// diffuse_map                       texture  float4          2d             t0      1 
// specular_map                      texture  float4          2d             t2      1 
// CAMERA_CONSTANTS                  cbuffer      NA          NA            cb1      1 
// SCENE_CONSTANTS                   cbuffer      NA          NA            cb2      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// POSITION                 0   xyzw        1     NONE   float   xyz 
// NORMAL                   0   xyzw        2     NONE   float   xyz 
// COLOR                    0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 0   xy          4     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB1[2], immediateIndexed
dcl_constantbuffer CB2[8], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t2
dcl_input_ps linear v1.xyz
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xy
dcl_output o0.xyzw
dcl_temps 4
dp4 r0.x, cb1[1].xyzw, cb1[1].xyzw
rsq r0.x, r0.x
mul r0.xyz, r0.xxxx, cb1[1].xyzx
dp3 r0.w, v2.xyzx, v2.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, v2.xyzx
dp3 r0.x, r1.xyzx, -r0.xyzx
add r0.x, r0.x, l(0.650000)
max r0.x, r0.x, l(0.000000)
sample_indexable(texture2d)(float,float,float,float) r0.yzw, v4.xyxx, t0.wxyz, s0
mul r0.yzw, r0.yyzw, cb2[1].xxyz
mul r2.xyz, r0.xxxx, r0.yzwy
mul r2.xyz, r2.xyzx, l(0.600000, 0.600000, 0.600000, 0.000000)
dp3 r0.x, cb2[0].xyzx, cb2[0].xyzx
rsq r0.x, r0.x
mul r3.xyz, r0.xxxx, cb2[0].xyzx
dp3 r0.x, r1.xyzx, -r3.xyzx
add r0.x, r0.x, l(0.650000)
max r0.x, r0.x, l(0.000000)
mad r0.xyz, r0.yzwy, r0.xxxx, r2.xyzx
add r0.xyz, r0.xyzx, cb2[7].xyzx
add r2.xyz, -v1.xyzx, cb1[0].xyzx
dp3 r0.w, r2.xyzx, r2.xyzx
rsq r0.w, r0.w
mad r2.xyz, r2.xyzx, r0.wwww, -r3.xyzx
dp3 r0.w, r2.xyzx, r2.xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, r2.xyzx
dp3 r0.w, r2.xyzx, r1.xyzx
max r0.w, r0.w, l(0.000000)
mul r0.w, r0.w, r0.w
mul r0.w, r0.w, r0.w
mul r1.x, r0.w, r0.w
mul r1.x, r1.x, r1.x
mul r0.w, r0.w, r1.x
sample_indexable(texture2d)(float,float,float,float) r1.xyz, v4.xyxx, t2.xyzw, s0
mul r1.xyz, r0.wwww, r1.xyzx
mad r0.xyz, r1.xyzx, cb2[1].xyzx, r0.xyzx
mov r0.w, l(1.000000)
mul o0.xyzw, r0.xyzw, v3.xyzw
ret 
// Approximately 41 instruction slots used
